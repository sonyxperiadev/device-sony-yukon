<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * Copyright 2013, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<resources>
    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">false</bool>

    <!-- The duration (in milliseconds) that the radio will scan for a signal
                  when there's no network connection. If the scan doesn't timeout, use zero -->
    <integer name="config_radioScanningTimeout">9000</integer>


    <string-array translatable="false" name="config_tether_wifi_regexs">
    	<item>"wlan0"</item>
    </string-array>

    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>"usb\\d"</item>
        <item>"rndis\\d"</item>
    </string-array>

    <string-array translatable="false" name="config_tether_bluetooth_regexs">
        <item>"bt-pan"</item>
    </string-array>

    <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,1,-1,true"</item>
        <item>"mobile,0,0,0,-1,true"</item>
        <item>"mobile_mms,2,0,2,60000,true"</item>
        <item>"mobile_supl,3,0,2,60000,true"</item>
        <item>"mobile_dun,4,0,2,60000,true"</item>
        <item>"mobile_hipri,5,0,3,60000,true"</item>
        <item>"mobile_fota,10,0,2,60000,true"</item>
        <item>"mobile_ims,11,0,2,60000,true"</item>
        <item>"mobile_cbs,12,0,2,60000,true"</item>
        <item>"bluetooth,7,7,2,-1,true"</item>
    </string-array>

    <string-array translatable="false" name="radioAttributes">
        <item>"1,1"</item>
        <item>"0,1"</item>
        <item>"7,1"</item>
    </string-array>


    <dimen name="config_viewConfigurationTouchSlop">13dp</dimen>

<!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true -->

    <bool translatable="false" name="skip_restoring_network_selection">true</bool>

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- The default iface on which to monitor data use -->
    <string name="config_datause_iface" translatable="false">rmnet0</string>

    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>4</item>
        <item>5</item>
        <item>7</item>
        <item>9</item>
    </integer-array>

    <bool name="config_enableWifiDisplay">true</bool>

    <!-- Setting this true forces the headset jack switches to use the/dev/input/event subsystem
         rather than the uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <bool translatable="false" name="skip_restoring_network_selection">true</bool>
    <string translatable="false" name="config_ntpServer">ntp.nict.jp</string>
    <string name="config_useragentprofile_url">http://uaprof.sonymobile.com/%sR1002.xml</string>
    <bool name="config_animateScreenLights">true</bool>
    <color name="config_defaultNotificationColor">#ffffffff</color>
    <bool name="config_intrusiveNotificationLed">true</bool>
    <bool name="config_unplugTurnsOnScreen">true</bool>
    <bool name="config_cellBroadcastAppLinks">true</bool>
    <bool name="config_sip_wifi_only">false</bool>
    <string name="default_wallpaper_component" translatable="false">com.android.phasebeam/.PhaseBeamWallpaper</string>
    <integer-array name="config_sms_enabled_single_shift_tables">
        <item>1</item>
    </integer-array>

    <!-- Flag indicating whether or not hardware automatic brightness is available.
         If config_hardware_auto_brightness is set to true, then hardware automatic brightness
         will be used instead of software automatic brightness. -->
    <!-- <bool name="config_hardware_auto_brightness_available">true</bool> -->

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings. -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Allow backlight brightness to go down to 100 -->
    <integer name="config_screenBrightnessSettingMinimum">10</integer>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:

         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>50</item>
        <item>600</item>
        <item>900</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>100</item>  <!-- 0 -->
        <item>150</item>  <!-- 50 -->
        <item>250</item>  <!-- 600 -->
        <item>255</item>  <!-- 900 -->
    </integer-array>

    <!-- DeskDock uses 90 degrees rotation and no accelerometer -->
    <integer name="config_deskDockRotation">1</integer>
    <bool name="config_deskDockEnablesAccelerometer">false</bool>

    <!-- SD Card can be removed without removing battery -->
    <bool name="config_batterySdCardAccessibility">true</bool>
</resources>
